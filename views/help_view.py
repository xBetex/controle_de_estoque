"""
View de ajuda
"""

import customtkinter as ctk
from views.base_view import BaseView
from config import FONT_SIZES, COLORS, APP_TITLE, APP_VERSION

class HelpView(BaseView):
    """View de ajuda do sistema"""
    
    def create_widgets(self):
        """Criar widgets da view de ajuda"""
        self.frame = ctk.CTkScrollableFrame(self.parent)
        
        # Cabe√ßalho
        self.create_header("‚ùì Ajuda e Documenta√ß√£o", "Guia de uso do sistema")
        
        # Conte√∫do da ajuda
        self.create_help_content()
    
    def create_help_content(self):
        """Criar conte√∫do da ajuda"""
        # Se√ß√£o Sobre
        about_frame = ctk.CTkFrame(self.frame)
        about_frame.pack(fill="x", padx=20, pady=10)
        
        ctk.CTkLabel(
            about_frame,
            text="Sobre o Sistema",
            font=ctk.CTkFont(size=FONT_SIZES["subheading"], weight="bold")
        ).pack(pady=(20, 10))
        
        about_text = f"""
{APP_TITLE}
Vers√£o: {APP_VERSION}

Sistema completo de controle de estoque desenvolvido em Python com interface moderna.
Permite gerenciar produtos, fornecedores, categorias e movimenta√ß√µes de estoque.
        """
        
        ctk.CTkLabel(
            about_frame,
            text=about_text.strip(),
            font=ctk.CTkFont(size=FONT_SIZES["text"]),
            justify="left"
        ).pack(pady=(0, 20))
        
        # Se√ß√£o Como Usar
        usage_frame = ctk.CTkFrame(self.frame)
        usage_frame.pack(fill="x", padx=20, pady=10)
        
        ctk.CTkLabel(
            usage_frame,
            text="Como Usar",
            font=ctk.CTkFont(size=FONT_SIZES["subheading"], weight="bold")
        ).pack(pady=(20, 10))
        
        usage_text = """
üè† DASHBOARD
- Visualize estat√≠sticas gerais do seu estoque
- Acompanhe atividades recentes
- Monitore produtos com estoque baixo

üì¶ PRODUTOS
- Cadastre novos produtos
- Edite informa√ß√µes existentes
- Ajuste quantidades em estoque
- Pesquise produtos por nome ou c√≥digo

üìä MOVIMENTA√á√ïES
- Visualize hist√≥rico de entradas e sa√≠das
- Filtre por tipo de movimenta√ß√£o
- Acompanhe raz√µes das movimenta√ß√µes

üè¢ FORNECEDORES
- Cadastre fornecedores
- Gerencie informa√ß√µes de contato
- Vincule produtos aos fornecedores

üè∑Ô∏è CATEGORIAS
- Organize produtos por categoria
- Facilite a busca e organiza√ß√£o

üìà RELAT√ìRIOS
- Gere relat√≥rios detalhados
- Analise dados por categoria/fornecedor
- Exporte informa√ß√µes
        """
        
        ctk.CTkLabel(
            usage_frame,
            text=usage_text.strip(),
            font=ctk.CTkFont(size=FONT_SIZES["text"]),
            justify="left"
        ).pack(pady=(0, 20))
        
        # Se√ß√£o Atalhos
        shortcuts_frame = ctk.CTkFrame(self.frame)
        shortcuts_frame.pack(fill="x", padx=20, pady=10)
        
        ctk.CTkLabel(
            shortcuts_frame,
            text="Dicas e Atalhos",
            font=ctk.CTkFont(size=FONT_SIZES["subheading"], weight="bold")
        ).pack(pady=(20, 10))
        
        shortcuts_text = """
‚ú® DICAS IMPORTANTES:

‚Ä¢ Duplo clique em qualquer item das listas para editar
‚Ä¢ Use o bot√£o direito do mouse para acessar menus de contexto
‚Ä¢ Configure alertas de estoque baixo em Configura√ß√µes
‚Ä¢ Fa√ßa backups regulares dos seus dados
‚Ä¢ Use a pesquisa para encontrar produtos rapidamente

üîÑ ATALHOS:
‚Ä¢ Ctrl+N: Novo produto (quando na aba Produtos)
‚Ä¢ F5: Atualizar dados
‚Ä¢ Esc: Fechar di√°logos

‚ö†Ô∏è IMPORTANTE:
‚Ä¢ Sempre fa√ßa backup antes de grandes altera√ß√µes
‚Ä¢ Mantenha os dados atualizados
‚Ä¢ Configure o estoque m√≠nimo para cada produto
        """
        
        ctk.CTkLabel(
            shortcuts_frame,
            text=shortcuts_text.strip(),
            font=ctk.CTkFont(size=FONT_SIZES["text"]),
            justify="left"
        ).pack(pady=(0, 20))
        
        # Se√ß√£o de Suporte
        support_frame = ctk.CTkFrame(self.frame)
        support_frame.pack(fill="x", padx=20, pady=10)
        
        ctk.CTkLabel(
            support_frame,
            text="Suporte e Contato",
            font=ctk.CTkFont(size=FONT_SIZES["subheading"], weight="bold")
        ).pack(pady=(20, 10))
        
        support_text = """
üìß Suporte t√©cnico: suporte@estoque.com
üåê Site: www.estoque.com
üì± WhatsApp: (11) 99999-9999

Para reportar bugs ou sugest√µes, entre em contato conosco.
Sua opini√£o √© importante para melhorarmos o sistema!
        """
        
        ctk.CTkLabel(
            support_frame,
            text=support_text.strip(),
            font=ctk.CTkFont(size=FONT_SIZES["text"]),
            justify="left"
        ).pack(pady=(0, 20))
    
    def refresh(self):
        """Atualizar dados da view"""
        pass  # Conte√∫do est√°tico 